<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!--
        1.context:include-filter：表示要包含的目标类，
             此处要扫描Controller，与spring-context.xml中的相反
        2.use-default-filters：当其值为false时，表示不使用默认的 Filter进行扫描，
             默认的扫描是全部都扫描
     -->
    <context:component-scan base-package="com.*" use-default-filters="false" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--
    	3.配置<mvc:default-servlet-handler/>的作用：
    	     会在Spring MVC上下文中定义一个DefaultServletHttpRequestHandler，
    	    它像一个检查员，对进入DispatcherServlet的URL进行筛查，
    	    如果发现是静态资源的请求， 就将该请求转由Web应用服务器默认的Servlet处理，
    	    如果不是静态资源的请求， 才由DispatcherServlet继续处理。
    -->
    <mvc:default-servlet-handler/>
    <!--4.解决@Controller标识的类的bean的注入和使用-->
    <mvc:annotation-driven/>


    <!-- 5.配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--   6.如果SpringMVC框架数据处理为响应JSON字符串，那么为了浏览器方便
    	        对响应的字符串进行处理，需要明确字符串的类型及编码方式。 如果增加了
    	   <mvc:annotation-driven />标签，下面的配置可省略。
    -->
    <!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
        <property name="messageConverters" >
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
                    <property name="supportedMediaTypes" >
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>  -->

    <!--7.配置拦截器-->
    <mvc:interceptors>
        <!--配置登录拦截器-->
        <mvc:interceptor>
            <!--拦截所有的请求-->
            <mvc:mapping path="/**"/>
            <!--排除要拦截的请求-->
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/doAjaxLogin"/>
            <mvc:exclude-mapping path="/register"/>
            <mvc:exclude-mapping path="/doAjaxRegister"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/jquery/**"/>
            <mvc:exclude-mapping path="/layer/**"/>
            <bean class="com.test.web.LoginInteceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>